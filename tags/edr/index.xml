<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>edr on Where DFIR Meets IT</title>
    <link>https://forensicitguy.github.io/tags/edr/</link>
    <description>Recent content in edr on Where DFIR Meets IT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Feb 2020 16:06:16 -0600</lastBuildDate>
    
	<atom:link href="https://forensicitguy.github.io/tags/edr/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux EDR Evasion With Meterpreter and LD_PRELOAD</title>
      <link>https://forensicitguy.github.io/posts/linux-edr-evasion-with-ld-preload/</link>
      <pubDate>Thu, 06 Feb 2020 16:06:16 -0600</pubDate>
      
      <guid>https://forensicitguy.github.io/posts/linux-edr-evasion-with-ld-preload/</guid>
      <description>Everyone has their favorite adversary technique to research and mine is LD_PRELOAD process injection because it&amp;rsquo;s pretty versatile. It lets you hook functions to manipulate output, and it can also let you trip up defenders by injecting code into arbitrary processes for execution. In this post, I&amp;rsquo;ll walk through how an adversary might combine Meterpreter with LD_PRELOAD to hide malicious activity under a legitimate Linux system process.
The Setup To get started, I&amp;rsquo;m working with a Kali Linux machine as my attacker system and a CentOS 8 system as my victim.</description>
    </item>
    
  </channel>
</rss>