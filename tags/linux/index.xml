<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Where DFIR Meets IT</title>
    <link>https://forensicitguy.github.io/tags/linux/</link>
    <description>Recent content in linux on Where DFIR Meets IT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jan 2020 21:06:20 -0600</lastBuildDate>
    
	<atom:link href="https://forensicitguy.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Road to RHCSA 8 - Getting Started</title>
      <link>https://forensicitguy.github.io/posts/road-to-rhcsa8-00/</link>
      <pubDate>Thu, 02 Jan 2020 21:06:20 -0600</pubDate>
      
      <guid>https://forensicitguy.github.io/posts/road-to-rhcsa8-00/</guid>
      <description>Updated 2020-01-04 - Added the Red Hat Certs Slack group to the community list and lab environment to the lab list.
Choosing my educational goal for the year always causes a bit of anxiety. I try to find the right balance between something that is fun to learn and something that will help with my day job. Last year, the educational goal was to learn Volatility memory forensics better through a training class.</description>
    </item>
    
    <item>
      <title>Whitelisting LD_PRELOAD for Fun and No Profit</title>
      <link>https://forensicitguy.github.io/posts/whitelisting-ld_preload-for-fun-and-no-profit/</link>
      <pubDate>Thu, 29 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://forensicitguy.github.io/posts/whitelisting-ld_preload-for-fun-and-no-profit/</guid>
      <description>If you’ve been around the Linux/BSD/Solaris/Other UNIX ecosystem for a while you’ve probably heard of the fabled LD_PRELOAD trick. If you haven’t heard of it, let me introduce you to one of the longest-held, dirty security issues in UNIX…
A Brief Look at LD_PRELOAD LD_PRELOAD is an environment variable used by the dynamic linker on UNIX-based systems. Normally the dynamic linker follows a specified search pattern to load various dynamic libraries (shared objects on UNIX).</description>
    </item>
    
  </channel>
</rss>